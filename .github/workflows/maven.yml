name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and Test All Services
        run: |
          for service in utilisateur config-server discovery-server gateway; do
            mvn -f $service/pom.xml clean install -DskipTests=false
          done

      - name: Run Tests for All Services
        run: |
          for service in utilisateur config-server discovery-server gateway; do
            mvn -f $service/pom.xml test
          done

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build and Push Docker Images
        run: |
          services=(config-server discovery-server gateway utilisateurs)
          for service in "${services[@]}"; do
            docker build -t myorg/$service:latest -f ./$service/Dockerfile ./$service
            docker push myorg/$service:latest
          done

      - name: Deploy with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
