name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Compile Project
        run: |
          mvn -f config-server clean compile
          mvn -f discovery-server clean compile
          mvn -f gateway clean compile
          mvn -f laboratoire clean compile
          mvn -f utilisateur clean compile

  #  unit-test:
  #    name: Unit Tests
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - name: Checkout code
  #        uses: actions/checkout@v4
  #
  #      - name: Set up JDK
  #        uses: actions/setup-java@v4
  #        with:
  #          distribution: 'temurin'
  #          java-version: 21
  #
  #  # -pl flag stands for "project list"
  #      - name: Running Unit Tests
  #        run: |
  #          ./mvnw -f utilisateur clean test 

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [compile]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Build Project
        run: |
          mvn -f config-server clean package -DskipTests=true
          mvn -f discovery-server clean package -DskipTests=true
          mvn -f gateway clean package -DskipTests=true
          mvn -f laboratoire clean package -DskipTests=true
          mvn -f utilisateur clean package -DskipTests=true

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            */target/*.jar
          retention-days: 1

  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [build]
    env:
          DOCKER_REPO: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Build and Push Docker Images
        run: |
          echo "Building and pushing images"
          docker build -t $DOCKER_REPO/config-server:latest -f config-server/Dockerfile config-server
          docker build -t $DOCKER_REPO/discovery-server:latest -f discovery-server/Dockerfile ./discovery-server
          docker build -t $DOCKER_REPO/gateway:latest -f gateway/Dockerfile ./gateway
          docker build -t $DOCKER_REPO/laboratoire:latest -f laboratoire/Dockerfile ./laboratoire
          docker build -t $DOCKER_REPO/utilisateur:latest -f utilisateur/Dockerfile ./utilisateur

      - name: Push Docker Images
        run: |
          docker push $DOCKER_REPO/config-server:latest
          docker push $DOCKER_REPO/discovery-server:latest
          docker push $DOCKER_REPO/gateway:latest
          docker push $DOCKER_REPO/laboratoire:latest
          docker push $DOCKER_REPO/utilisateur:latest
          
