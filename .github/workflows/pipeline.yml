name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Compile Project
        run: |
          mvn clean compile -pl config-server,discovery-server,gateway,laboratoire,utilisateur

  #  unit-test:
  #    name: Unit Tests
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - name: Checkout code
  #        uses: actions/checkout@v4
  #
  #      - name: Set up JDK
  #        uses: actions/setup-java@v4
  #        with:
  #          distribution: 'temurin'
  #          java-version: 21
  #
  #  # -pl flag stands for "project list"
  #      - name: Running Unit Tests
  #        run: |
  #          ./mvnw clean test -pl utilisateur

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [compile]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Build Project
        run: |
          mvn clean package -DskipTests=true -pl config-server,discovery-server,gateway,laboratoire,utilisateur

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            */target/*.jar
          retention-days: 1

  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Setup Docker Build/Push
        uses: docker/build-push-action@v5

      - name: Build and Push Docker Images
        env:
          DOCKER_REPO: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
        run: |
          echo "Building and pushing images"
          docker build -t $DOCKER_REPO/config-server:latest -f ./config-server/Dockerfile ./config-server
          docker build -t $DOCKER_REPO/discovery-server:latest -f ./discovery-server/Dockerfile ./discovery-server
          docker build -t $DOCKER_REPO/gateway:latest -f ./gateway/Dockerfile ./gateway
          docker build -t $DOCKER_REPO/laboratoire:latest -f ./laboratoire/Dockerfile ./laboratoire
          docker build -t $DOCKER_REPO/utilisateur:latest -f ./utilisateur/Dockerfile ./utilisateur
          
          docker push $DOCKER_REPO/config-server:latest
          docker push $DOCKER_REPO/discovery-server:latest
          docker push $DOCKER_REPO/gateway:latest
          docker push $DOCKER_REPO/laboratoire:latest
          docker push $DOCKER_REPO/utilisateur:latest
          
