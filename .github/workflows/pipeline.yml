name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Build and Test All Services
        run: |
          for service in utilisateur config-server discovery-server gateway; do
            mvn -f $service/pom.xml clean install -DskipTests=true
          done

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build and Push Docker Images
        run: |
          services=(config-server discovery-server gateway utilisateurs)
          for service in "${services[@]}"; do
            docker build -t myorg/$service:latest -f ./$service/Dockerfile ./$service
            docker push myorg/$service:$(date '+%Y-%m-%d-%H-%M-%S')
          done

      - name: Deploy with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
