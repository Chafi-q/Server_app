services:
  # PostgreSQL Database for Utilisateur Service
  utilisateurs-db:
    image: postgres:latest
    container_name: utilisateurs-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: utilisateurs
      PGDATA: /data/users
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - ./data/users_data:/data/users
  # PostgreSQL Database for Laboratoire Service
  laboratoires-db:
    image: postgres:latest
    container_name: laboratoires-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: laboratories
      PGDATA: /data/labos
      POSTGRES_HOST_AUTH_METHOD: trust
      PGPORT: "5433"
    ports:
      - "5433:5433"
    networks:
      - app-network
    volumes:
      - ./data/labos_data:/data/labos
  # PostgreSQL Database for Patient Service
  patients-db:
    image: postgres:latest
    container_name: patients-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: patients
      PGDATA: /data/patients
      POSTGRES_HOST_AUTH_METHOD: trust
      PGPORT: "5434"
    ports:
      - "5434:5434"
    networks:
      - app-network
    volumes:
      - ./data/patients_data:/data/patients
  # PostgreSQL Database for Analyse Service
  analyses-db:
    image: postgres:latest
    container_name: analyses-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: analyses
      PGDATA: /data/analyses
      POSTGRES_HOST_AUTH_METHOD: trust
      PGPORT: "5435"
    ports:
      - "5435:5435"
    networks:
      - app-network
    volumes:
      - ./data/analyses_data:/data/analyses
  # PostgreSQL Database for Examin Service
  examins-db:
    image: postgres:latest
    container_name: examins-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: examins
      PGDATA: /data/examins
      POSTGRES_HOST_AUTH_METHOD: trust
      PGPORT: "5436"
    ports:
      - "5436:5436"
    networks:
      - app-network
    volumes:
      - ./data/examins_data:/data/examins
  # PostgreSQL Database for Test Service
  tests-db:
    image: postgres:latest
    container_name: tests-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tests
      PGDATA: /data/tests
      POSTGRES_HOST_AUTH_METHOD: trust
      PGPORT: "5437"
    ports:
      - "5437:5437"
    networks:
      - app-network
    volumes:
      - ./data/tests_data:/data/tests


  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - app-network

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8080:8080"
    networks:
      - app-network

  utilisateurs:
    build:
      context: ./user
      dockerfile: Dockerfile
    container_name: utilisateurs
    ports:
      - "8070:8070"
    depends_on:
      - utilisateurs-db
      - discovery-server
    networks:
      - app-network

  laboratoires:
    build:
      context: ./laboratoire
      dockerfile: Dockerfile
    container_name: laboratoires
    ports:
      - "8071:8071"
    depends_on:
      - laboratoires-db
      - discovery-server
    networks:
      - app-network

  patients:
    build:
      context: ./patient
      dockerfile: Dockerfile
    container_name: patients
    ports:
      - "8072:8072"
    depends_on:
      - patients-db
      - discovery-server
    networks:
      - app-network

  analyses:
    build:
      context: ./analyse
      dockerfile: Dockerfile
    container_name: analyses
    ports:
      - "8073:8073"
    depends_on:
      - analyses-db
      - discovery-server
    networks:
      - app-network

  examins:
    build:
      context: ./examin
      dockerfile: Dockerfile
    container_name: examins
    ports:
      - "8074:8074"
    depends_on:
      - examins-db
      - discovery-server
    networks:
      - app-network

  tests:
    build:
      context: ./test
      dockerfile: Dockerfile
    container_name: tests
    ports:
      - "8075:8075"
    depends_on:
      - tests-db
      - discovery-server
    networks:
      - app-network


  # Keycloak Service
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.7
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://utilisateurs-db:5432/utilisateurs
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HOSTNAME: localhost
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8092:8092"
    networks:
      - app-network
    command: ["start-dev", "--http-port=8092"]

  # pgAdmin Service
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - app-network
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin
# Define the network
networks:
  app-network:
    driver: bridge
# Define the volumes
volumes:
  users_data:
  labos_data:
  patient_data:
  analyse_data:
  examins_data:
  tests_data:


